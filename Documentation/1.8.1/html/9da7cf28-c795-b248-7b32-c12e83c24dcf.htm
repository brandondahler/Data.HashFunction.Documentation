<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>System.Data.HashFunction Namespace</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="System.Data.HashFunction namespace" /><meta name="Microsoft.Help.F1" content="System.Data.HashFunction" /><meta name="Microsoft.Help.Id" content="N:System.Data.HashFunction" /><meta name="Description" content="Namespace containing all supported HashFunctions provided by Data.HashFunction." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="System.Data.HashFunction" /><meta name="file" content="9da7cf28-c795-b248-7b32-c12e83c24dcf" /><meta name="guid" content="9da7cf28-c795-b248-7b32-c12e83c24dcf" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Data.HashFunction Sandcastle Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="9da7cf28-c795-b248-7b32-c12e83c24dcf.htm" title="Data.HashFunction Sandcastle Documentation" tocid="roottoc">Data.HashFunction Sandcastle Documentation</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="9da7cf28-c795-b248-7b32-c12e83c24dcf.htm" title="System.Data.HashFunction" tocid="9da7cf28-c795-b248-7b32-c12e83c24dcf">System.Data.HashFunction</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="59f3f15d-87c8-b826-842a-e58c8fdee083.htm" title="BernsteinHash Class" tocid="59f3f15d-87c8-b826-842a-e58c8fdee083">BernsteinHash Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="1e7a23de-ca71-fae0-54a7-17f192b36226.htm" title="Blake2B Class" tocid="1e7a23de-ca71-fae0-54a7-17f192b36226">Blake2B Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="52ff4cba-31fa-0b1e-e8cf-4b59a0fdf650.htm" title="BuzHashBase Class" tocid="52ff4cba-31fa-0b1e-e8cf-4b59a0fdf650">BuzHashBase Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="dde3437b-cfc3-0658-e6df-56215492c90e.htm" title="BuzHashBase.CircularShiftDirection Enumeration" tocid="dde3437b-cfc3-0658-e6df-56215492c90e">BuzHashBase.CircularShiftDirection Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="3b5a981a-5031-4864-9f38-f1f9dc5e64b1.htm" title="CityHash Class" tocid="3b5a981a-5031-4864-9f38-f1f9dc5e64b1">CityHash Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="4c1ae67a-d28d-02b1-222e-2984c9d44ad1.htm" title="CRC Class" tocid="4c1ae67a-d28d-02b1-222e-2984c9d44ad1">CRC Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="699690cc-d2c1-83c7-e56d-4e4109969c92.htm" title="CRC.Setting Class" tocid="699690cc-d2c1-83c7-e56d-4e4109969c92">CRC.Setting Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="894cc814-f36c-ef7f-fb53-6b992f4a6ee4.htm" title="CRC.Standard Enumeration" tocid="894cc814-f36c-ef7f-fb53-6b992f4a6ee4">CRC.Standard Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="b2db9032-e727-e2d0-6fc1-8a42ee19ec08.htm" title="DefaultBuzHash Class" tocid="b2db9032-e727-e2d0-6fc1-8a42ee19ec08">DefaultBuzHash Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="f8fbda73-13ce-f689-7e71-cad1302e7e79.htm" title="ELF64 Class" tocid="f8fbda73-13ce-f689-7e71-cad1302e7e79">ELF64 Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="f31714aa-d203-09a8-3d80-6621fd6f61dd.htm" title="FNV1 Class" tocid="f31714aa-d203-09a8-3d80-6621fd6f61dd">FNV1 Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="a6d9c922-8878-55c0-12dc-ae51dadfc82d.htm" title="FNV1a Class" tocid="a6d9c922-8878-55c0-12dc-ae51dadfc82d">FNV1a Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="71dce7f3-dfa3-8084-7f77-20e12ac1f98e.htm" title="FNV1Base Class" tocid="71dce7f3-dfa3-8084-7f77-20e12ac1f98e">FNV1Base Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="fd5b578b-84bc-a10c-c8d2-963f54524027.htm" title="FNVPrimeOffset Class" tocid="fd5b578b-84bc-a10c-c8d2-963f54524027">FNVPrimeOffset Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="3462eb18-2468-c7e6-b652-2c1ce3fb69ad.htm" title="HashAlgorithmWrapper Class" tocid="3462eb18-2468-c7e6-b652-2c1ce3fb69ad">HashAlgorithmWrapper Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="697ffc7f-8e9c-3983-a002-72fb3906af3e.htm" title="HashAlgorithmWrapper(HashAlgorithmT) Class" tocid="697ffc7f-8e9c-3983-a002-72fb3906af3e">HashAlgorithmWrapper(HashAlgorithmT) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="7c9cf831-9825-8de2-a979-1f8ec72fc75c.htm" title="HashFunctionAsyncBase Class" tocid="7c9cf831-9825-8de2-a979-1f8ec72fc75c">HashFunctionAsyncBase Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c51b5548-085e-6780-4462-b2c4a11edcd2.htm" title="HashFunctionBase Class" tocid="c51b5548-085e-6780-4462-b2c4a11edcd2">HashFunctionBase Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="649f4f78-f9ef-d51a-2ef9-06ebcec666ee.htm" title="IHashFunction Interface" tocid="649f4f78-f9ef-d51a-2ef9-06ebcec666ee">IHashFunction Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="e3f59a5e-9bd7-eec6-8082-dba067daabae.htm" title="IHashFunction_Extensions Class" tocid="e3f59a5e-9bd7-eec6-8082-dba067daabae">IHashFunction_Extensions Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="00707ed8-b8a2-9d19-2ed5-a217ac07575e.htm" title="IHashFunctionAsync Interface" tocid="00707ed8-b8a2-9d19-2ed5-a217ac07575e">IHashFunctionAsync Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="5d3d5484-5d2c-6d6a-67d2-ef216fc5d6b5.htm" title="JenkinsLookup2 Class" tocid="5d3d5484-5d2c-6d6a-67d2-ef216fc5d6b5">JenkinsLookup2 Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="171d78df-7a95-5979-03ab-995bbdd8466c.htm" title="JenkinsLookup3 Class" tocid="171d78df-7a95-5979-03ab-995bbdd8466c">JenkinsLookup3 Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="91ac99bd-fd9a-4985-ba1b-96c934ecf2af.htm" title="JenkinsOneAtATime Class" tocid="91ac99bd-fd9a-4985-ba1b-96c934ecf2af">JenkinsOneAtATime Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="fa307a54-96e1-b2db-c560-1efafc8f6036.htm" title="ModifiedBernsteinHash Class" tocid="fa307a54-96e1-b2db-c560-1efafc8f6036">ModifiedBernsteinHash Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="88ac587f-f14e-14de-a769-1963147973b8.htm" title="MurmurHash1 Class" tocid="88ac587f-f14e-14de-a769-1963147973b8">MurmurHash1 Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="a18cf018-0e9a-5fe8-3d3a-730d8f880b6b.htm" title="MurmurHash2 Class" tocid="a18cf018-0e9a-5fe8-3d3a-730d8f880b6b">MurmurHash2 Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="e5637093-edca-76ab-aaf3-290a48b1afee.htm" title="MurmurHash3 Class" tocid="e5637093-edca-76ab-aaf3-290a48b1afee">MurmurHash3 Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="701f6a11-72e0-dd39-76a9-b4ee9ee82988.htm" title="PearsonBase Class" tocid="701f6a11-72e0-dd39-76a9-b4ee9ee82988">PearsonBase Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ed120437-c328-c929-0fb5-0d6d0ca654b0.htm" title="SpookyHashV1 Class" tocid="ed120437-c328-c929-0fb5-0d6d0ca654b0">SpookyHashV1 Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="47cdeac4-c5b9-6d94-0664-3be9276e37ce.htm" title="SpookyHashV2 Class" tocid="47cdeac4-c5b9-6d94-0664-3be9276e37ce">SpookyHashV2 Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="9bb2dd0b-ca01-198a-0bef-f18d6844480e.htm" title="WikipediaPearson Class" tocid="9bb2dd0b-ca01-198a-0bef-f18d6844480e">WikipediaPearson Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6d100191-40a6-ed68-cd09-0d8690cd4a31.htm" title="xxHash Class" tocid="6d100191-40a6-ed68-cd09-0d8690cd4a31">xxHash Class</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">System.Data.HashFunction Namespace</td></tr></table><span class="introStyle"></span><div class="summary">
            Namespace containing all supported HashFunctions provided by Data.HashFunction.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Classes</span></div><div id="ID0RBSection" class="collapsibleSection"><table id="typeList" class="members"><tr><th class="iconColumn">
					 
				</th><th>Class</th><th>Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="59f3f15d-87c8-b826-842a-e58c8fdee083.htm">BernsteinHash</a></td><td><div class="summary">
            Implementation of Bernstein hash as specified at http://www.eternallyconfuzzled.com/tuts/algorithms/jsw_tut_hashing.aspx#djb.
            
            From http://www.eternallyconfuzzled.com/tuts/algorithms/jsw_tut_hashing.aspx#djb:
            "
              Dan Bernstein created this algorithm and posted it in a newsgroup. 
              It is known by many as the Chris Torek hash because Chris went a long way toward popularizing it. 
              Since then it has been used successfully by many, but despite that the algorithm itself is not very sound 
                when it comes to avalanche and permutation of the internal state. 
              It has proven very good for small character keys, where it can outperform algorithms that result 
                in a more random distribution.    
                
              Bernstein's hash should be used with caution. 
              It performs very well in practice, for no apparently known reasons 
                (much like how the constant 33 does better than more logical constants for no apparent reason), 
                but in theory it is not up to snuff. 
              Always test this function with sample data for every application to ensure that it does not encounter 
                a degenerate case and cause excessive collisions.
            "
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="1e7a23de-ca71-fae0-54a7-17f192b36226.htm">Blake2B</a></td><td><div class="summary">
            Implementation of BLAKE2b as specified at https://blake2.net/.  Modified from the canonical C# port at 
            https://blake2.net/blake2_code_20140114.zip. Supports a hash output size of 8 through 512 bits in 8-bit increments 
            and allows seeding with a key, salt, and/or personalization sequence.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="52ff4cba-31fa-0b1e-e8cf-4b59a0fdf650.htm">BuzHashBase</a></td><td><div class="summary">
            Base implementation of BuzHash as specified at http://www.serve.net/buz/hash.adt/java.002.html.
            
            Relies on a random table of 256 (preferably distinct) 64-bit integers.
            Also can be set to use left or right rotation when running the rotate step.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="3b5a981a-5031-4864-9f38-f1f9dc5e64b1.htm">CityHash</a></td><td><div class="summary">
            Implementation of CityHash as specified at https://code.google.com/p/cityhash/.
            
            "
            CityHash provides hash functions for strings. The functions mix the 
              input bits thoroughly but are not suitable for cryptography. 
             
            [Hash size of 128-bits is] tuned for strings of at least a few hundred bytes. 
            Depending on your compiler and hardware, it's likely faster than [the hash size of 64-bits] on 
              sufficiently long strings. 
            It's slower than necessary on shorter strings, but we expect that case to be relatively unimportant.
            "
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="4c1ae67a-d28d-02b1-222e-2984c9d44ad1.htm">CRC</a></td><td><div class="summary">
            Implementation of the cyclic redundancy check error-detecting code as defined at http://en.wikipedia.org/wiki/Cyclic_redundancy_check.
            This implementation is generalized to encompass all possible CRC parameters from 1 to 64 bits.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="699690cc-d2c1-83c7-e56d-4e4109969c92.htm">CRC<span id="LST9844FB45_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9844FB45_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Setting</a></td><td><div class="summary">
            Storage for all CRC calculation parameters and cache location of the CRC data-division table.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="b2db9032-e727-e2d0-6fc1-8a42ee19ec08.htm">DefaultBuzHash</a></td><td><div class="summary">
            Basic implementation of <a href="52ff4cba-31fa-0b1e-e8cf-4b59a0fdf650.htm">BuzHashBase</a> class.  
            
            Uses randomly generated table and left circular shift.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="f8fbda73-13ce-f689-7e71-cad1302e7e79.htm">ELF64</a></td><td><div class="summary">
             Implementation of the hash function used in the elf64 object file format as specified at 
               http://downloads.openwatcom.org/ftp/devel/docs/elf-64-gen.pdf on page 17.
            
             Contrary to the name, the hash algorithm is only designed for 32-bit output hash sizes.
             </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="f31714aa-d203-09a8-3d80-6621fd6f61dd.htm">FNV1</a></td><td><div class="summary">
            Implementation of Fowler–Noll–Vo hash function (FNV-1) as specified at http://www.isthe.com/chongo/tech/comp/fnv/index.html. 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="a6d9c922-8878-55c0-12dc-ae51dadfc82d.htm">FNV1a</a></td><td><div class="summary">
            Implementation of Fowler–Noll–Vo hash function (FNV-1a) as specified at http://www.isthe.com/chongo/tech/comp/fnv/index.html. 
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="71dce7f3-dfa3-8084-7f77-20e12ac1f98e.htm">FNV1Base</a></td><td><div class="summary">
            Abstract implementation of Fowler–Noll–Vo hash function (FNV-1 and FNV-1a) as specified at http://www.isthe.com/chongo/tech/comp/fnv/index.html.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="fd5b578b-84bc-a10c-c8d2-963f54524027.htm">FNVPrimeOffset</a></td><td><div class="summary">
            Class for storing FNV prime and offset combinations.
            
            Values specified as System.Numerics.BigInteger, converted to collections of UInt32 values.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="3462eb18-2468-c7e6-b652-2c1ce3fb69ad.htm">HashAlgorithmWrapper</a></td><td><div class="summary">
            Implementation of <a href="649f4f78-f9ef-d51a-2ef9-06ebcec666ee.htm">IHashFunction</a> that wraps cryptographic hash functions known as <a href="http://msdn2.microsoft.com/en-us/library/k50cye1b" target="_blank">HashAlgorithm</a>.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="697ffc7f-8e9c-3983-a002-72fb3906af3e.htm">HashAlgorithmWrapper<span id="LST9844FB45_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9844FB45_1?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>HashAlgorithmT<span id="LST9844FB45_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9844FB45_2?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Generic implementation of <a href="649f4f78-f9ef-d51a-2ef9-06ebcec666ee.htm">IHashFunction</a> that wraps cryptographic hash functions known as <a href="http://msdn2.microsoft.com/en-us/library/k50cye1b" target="_blank">HashAlgorithm</a>s.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="7c9cf831-9825-8de2-a979-1f8ec72fc75c.htm">HashFunctionAsyncBase</a></td><td><div class="summary">
            Abstract implementation of an IHashFunction.
            Provides convenience checks and ensures a default HashSize has been set at construction.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="c51b5548-085e-6780-4462-b2c4a11edcd2.htm">HashFunctionBase</a></td><td><div class="summary">
            Abstract implementation of an IHashFunction.
            Provides convenience checks and ensures a default HashSize has been set at construction.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="e3f59a5e-9bd7-eec6-8082-dba067daabae.htm">IHashFunction_Extensions</a></td><td><div class="summary">
            Static class to provide extension functions for IHashFunction instances.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="5d3d5484-5d2c-6d6a-67d2-ef216fc5d6b5.htm">JenkinsLookup2</a></td><td><div class="summary">
            Implementation of Bob Jenkins' Lookup2 hash function as specified at http://burtleburtle.net/bob/c/lookup2.c and http://www.burtleburtle.net/bob/hash/doobs.html.
            
            This hash function has been superseded by JenkinsLookup3.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="171d78df-7a95-5979-03ab-995bbdd8466c.htm">JenkinsLookup3</a></td><td><div class="summary">
            Implementation of Bob Jenkins' Lookup3 hash function as specified at http://burtleburtle.net/bob/c/lookup3.c.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="91ac99bd-fd9a-4985-ba1b-96c934ecf2af.htm">JenkinsOneAtATime</a></td><td><div class="summary">
            Implementation of Bob Jenkins' One-at-a-Time hash function as specified at http://www.burtleburtle.net/bob/hash/doobs.html (function named "one_at_a_time").
            
            This hash function has been superseded by JenkinsLookup2 and JenkinsLookup3.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="fa307a54-96e1-b2db-c560-1efafc8f6036.htm">ModifiedBernsteinHash</a></td><td><div class="summary">
            Implementation of Modified Bernstein hash as specified at http://www.eternallyconfuzzled.com/tuts/algorithms/jsw_tut_hashing.aspx#djb2.
            
            "
            [The Modified Bernstein hash is a] minor update to <a href="59f3f15d-87c8-b826-842a-e58c8fdee083.htm">Bernstein's hash</a> replaces addition with 
              XOR for the combining step. 
            This change does not appear to be well known or often used, the original algorithm is still 
              recommended by nearly everyone, but the new algorithm typically results in a better distribution.
              
            Dan Bernstein created [the Bernstein hash] algorithm and posted it in a newsgroup. 
              It is known by many as the Chris Torek hash because Chris went a long way toward popularizing it. 
              Since then it has been used successfully by many, but despite that the algorithm itself is not very sound 
                when it comes to avalanche and permutation of the internal state. 
              It has proven very good for small character keys, where it can outperform algorithms that result 
                in a more random distribution.    
                
              Bernstein's hash should be used with caution. 
              It performs very well in practice, for no apparently known reasons 
                (much like how the constant 33 does better than more logical constants for no apparent reason), 
                but in theory it is not up to snuff. 
              Always test this function with sample data for every application to ensure that it does not encounter 
                a degenerate case and cause excessive collisions.
            "
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="88ac587f-f14e-14de-a769-1963147973b8.htm">MurmurHash1</a></td><td><div class="summary">
            Implementation of MurmurHash1 as specified at https://code.google.com/p/smhasher/source/browse/trunk/MurmurHash1.cpp 
              and https://code.google.com/p/smhasher/wiki/MurmurHash1.
            
            This hash function has been superseded by MurmurHash2 and MurmurHash3.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="a18cf018-0e9a-5fe8-3d3a-730d8f880b6b.htm">MurmurHash2</a></td><td><div class="summary">
            Implementation of MurmurHash2 as specified at https://code.google.com/p/smhasher/source/browse/trunk/MurmurHash2.cpp 
              and https://code.google.com/p/smhasher/wiki/MurmurHash2.
            
            This hash function has been superseded by MurmurHash3.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="e5637093-edca-76ab-aaf3-290a48b1afee.htm">MurmurHash3</a></td><td><div class="summary">
            Implementation of MurmurHash3 as specified at https://code.google.com/p/smhasher/source/browse/trunk/MurmurHash3.cpp 
              and https://code.google.com/p/smhasher/wiki/MurmurHash3.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="701f6a11-72e0-dd39-76a9-b4ee9ee82988.htm">PearsonBase</a></td><td><div class="summary">
            Abstract implementation of Pearson hashing as specified at http://en.wikipedia.org/wiki/Pearson_hashing and
              http://cs.mwsu.edu/~griffin/courses/2133/downloads/Spring11/p677-pearson.pdf.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="ed120437-c328-c929-0fb5-0d6d0ca654b0.htm">SpookyHashV1</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Implementation of SpookyHash V1 as specified at http://burtleburtle.net/bob/hash/spooky.html.
            
            This hash function has been superseded by <a href="47cdeac4-c5b9-6d94-0664-3be9276e37ce.htm">SpookyHashV2</a> due to a loss of entropy from a 
              coding error in the original specification.  It still passes the hash function tests the creator set for it,
              but it is preferred that SpookyHash V2 is used.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="47cdeac4-c5b9-6d94-0664-3be9276e37ce.htm">SpookyHashV2</a></td><td><div class="summary">
            Implements SpookyHash V2 as specified at http://burtleburtle.net/bob/hash/spooky.html.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="9bb2dd0b-ca01-198a-0bef-f18d6844480e.htm">WikipediaPearson</a></td><td><div class="summary">
            Implementation of Pearson hashing using the lookup table given in the article at
            http://en.wikipedia.org/wiki/Pearson_hashing as of 2014-04-21.
            
            The implementation was modified to allow whole-byte outputs between 8 and 2040 bits (provided by <a href="701f6a11-72e0-dd39-76a9-b4ee9ee82988.htm">PearsonBase</a>).
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="6d100191-40a6-ed68-cd09-0d8690cd4a31.htm">xxHash</a></td><td><div class="summary">
            Implements xxHash as specified at https://code.google.com/p/xxhash/source/browse/trunk/xxhash.c and 
              https://code.google.com/p/xxhash/.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Interfaces</span></div><div id="ID1RBSection" class="collapsibleSection"><table id="typeList" class="members"><tr><th class="iconColumn">
					 
				</th><th>Interface</th><th>Description</th></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="649f4f78-f9ef-d51a-2ef9-06ebcec666ee.htm">IHashFunction</a></td><td><div class="summary">
            Common interface to non-cryptographic hash functions.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="00707ed8-b8a2-9d19-2ed5-a217ac07575e.htm">IHashFunctionAsync</a></td><td><div class="summary">
            Common interface to non-cryptographic hash functions.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Enumerations</span></div><div id="ID2RBSection" class="collapsibleSection"><table id="typeList" class="members"><tr><th class="iconColumn">
					 
				</th><th>Enumeration</th><th>Description</th></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="dde3437b-cfc3-0658-e6df-56215492c90e.htm">BuzHashBase<span id="LST9844FB45_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9844FB45_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>CircularShiftDirection</a></td><td><div class="summary">Enumeration of possible directions a circular shift can be defined for.</div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="894cc814-f36c-ef7f-fb53-6b992f4a6ee4.htm">CRC<span id="LST9844FB45_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9844FB45_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Standard</a></td><td><div class="summary">
            Enumeration of all defined and implemented CRC standards.
            </div></td></tr></table></div></div></div><div id="pageFooter" class="pageFooter"> </div></body><script type="text/javascript">
<!--
    var tocNav = document.getElementById("tocNav");
    var anchor = tocNav.children[0].children[0];
    Toggle(anchor);
    tocNav.children[0].className += " current";
-->
</script>
</html>